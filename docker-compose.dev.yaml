version: "3"

volumes:
  database:
services:
  ##### APPLICATION STACK SERVICES

  ##

  backend:
    container_name: backend
    build:
      context: "./backend"
      dockerfile: "dockerfile.dev"
      args:
        githubsecret: ${githubsecret}
        username: ${username}
        repository: ${repository}
    image: backend
    volumes:
      - "./backend:/application/backend"
    restart: always
    env_file:
      - ./backend/.env
    ports:
      - "5000:5000"
    network_mode: "host"

  ##

  frontend:
    container_name: frontend
    build:
      context: "./frontend"
      dockerfile: "dockerfile.dev"
      args:
        githubsecret: ${githubsecret}
        username: ${username}
        repository: ${repository}
    image: frontend
    volumes:
      - "./frontend:/application/frontend"
    restart: always
    ports:
      - "3000:3000"
    network_mode: "host"

  ##

  database:
    container_name: database
    image: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - "3306:3306"
    volumes:
      - "database:/var/lib/mysql"
    cap_add:
      - SYS_NICE # CAP_SYS_NICE
    network_mode: "host"

  ###################################

  ##### REMOTE CODE EXECUTOR SERVICES

  ##

  # port --> 5672
  rabbitmq:
    container_name: rabbitmq-container
    image: "rabbitmq"
    restart: always

  ##

  # port --> 6379
  redis-server:
    container_name: redis-server-container
    image: "redis"
    restart: always

  ##

  # port --> 7000
  rce-server:
    container_name: rce-server-container
    build:
      context: "./remote_code_executor/server"
      dockerfile: "Dockerfile"
      args:
        githubsecret: ${githubsecret}
        username: ${username}
        repository: ${repository}
    user: root
    restart: always
    ports:
      - "7000:7000"

  ##

  # port 43995 tcp 46465 udp 80 tcp
  worker:
    container_name: worker-container
    build:
      context: "./remote_code_executor/workers"
      dockerfile: "Dockerfile"
      args:
        githubsecret: ${githubsecret}
        username: ${username}
        repository: ${repository}
    user: root
    restart: always
    pids_limit: 60 # Max number of processes running in thw container.
    cpus: 1 # No of CPUs allocated
    mem_limit: 150M # Hard limit
  # ------------------ port issue

  ###################################

  ##### MONACO EDITOR + CONVERGENCE SERVICES

  monaco-editor:
    container_name: editor
    build:
      context: "./editor"
      dockerfile: "Dockerfile"
      args:
        githubsecret: ${githubsecret}
        username: ${username}
        repository: ${repository}
    image: monaco-editor
    volumes:
      - "./editor:/application/editor"
    restart: always
    env_file:
      - ./editor/.env
    ports:
      - "4000:4000"
    network_mode: "host"

  #

  #port 2424 2480
  orientdb:
    container_name: orientdb-container
    image: orientdb:3.0.37
    restart: always
    environment:
      ORIENTDB_ROOT_PASSWORD: "password"
      ORIENTDB_OPTS_MEMORY: "-Xms384m -Xmx384m"
      JAVA_OPTS: "-Dstorage.wal.allowDirectIO=false"
    volumes:
      - ./data/orientdb/databases:/orientdb/databases
      - ./data/orientdb/backup:/orientdb/backup
    # ------------------ port issue

  ##

  #port 25520
  cluster-seed:
    container_name: cluster-seed-container
    image: convergencelabs/convergence-cluster-seed:1.0.0-rc.12
    command: "-Dlog4j.configurationFile=/etc/convergence/log4j2.xml"
    restart: always
    volumes:
      - ./collab/config/convergence/log4j2.xml:/etc/convergence/log4j2.xml
    environment:
      JAVA_OPTS: "-Xmx64m -Xss512k -XX:CICompilerCount=1 -XX:-TieredCompilation"
      REMOTING_EXTERNAL_HOSTNAME: cluster-seed
      CLUSTER_SEED_NODES: cluster-seed

  ##

  ## 25520 80 443
  server:
    container_name: server-container
    image: convergencelabs/convergence-server:1.0.0-rc.12
    restart: always
    volumes:
      - ./collab/config/convergence/log4j2.xml:/opt/convergence-server/conf/log4j2.xml
      - ./collab/config/convergence/convergence-server.conf:/opt/convergence-server/conf/convergence-server.conf
    links:
      - cluster-seed
      - orientdb

  ##

  ## 80, 443
  admin-console:
    container_name: admin-console-container
    image: convergencelabs/convergence-admin-console:1.0.0-rc.12
    restart: always
    environment:
      CONVERGENCE_SERVER_REALTIME_API: "https://localhost/realtime/"
      CONVERGENCE_SERVER_REST_API: "https://localhost/rest/"
      CONVERGENCE_CONSOLE_BASE_URL: "/console/"

  ##

  proxy:
    container_name: proxy-container
    image: nginx:1.21.1-alpine
    restart: always
    volumes:
      - ./collab/config/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./collab/config/nginx/html:/usr/share/nginx/html
      - ./collab/config/nginx/ssl:/etc/nginx/ssl/
    depends_on:
      - orientdb
      - server
      - admin-console
    ports:
      - "443:443"
      - "80:80"
