pipeline {

  agent {
    kubernetes {
      yamlFile 'jenkins/pipelineAgent.yaml'   
    }
  }

  stages {

    stage('Building & Pushing Images To DockerHub Registry') {
      steps {
        container('kaniko') {
            withCredentials([string(credentialsId: 'githubpull', variable: 'githubpullingsecret'), string(credentialsId: 'githubusername', variable: 'githubusername'), string(credentialsId: 'githubrepository', variable: 'githubrepository')]) {
                script {
                    sh '''
                    /kaniko/executor --dockerfile backend/dockerfile.prod \
                                    --destination=tashikmoin/codeclassy-backend:${BUILD_NUMBER} \
                                    --build-arg=githubsecret=${githubpullingsecret} \
                                    --build-arg=username=${githubusername} \
                                    --build-arg=repository=${githubrepository} \
                                    --cache=true --ignore-path=/busybox --cleanup && mkdir -p /workspace;
                    
                    /kaniko/executor --dockerfile frontend/dockerfile.prod \
                                    --destination=tashikmoin/codeclassy-frontend:${BUILD_NUMBER} \
                                    --build-arg=githubsecret=${githubpullingsecret} \
                                    --build-arg=username=${githubusername} \
                                    --build-arg=repository=${githubrepository} \
                                    --cache=true --ignore-path=/busybox --cleanup && mkdir -p /workspace;
                    '''
                }
            }
        }
      }
    }

    stage('Deploy App to Kubernetes') {     
      steps {
        container('kubectl') {
          withCredentials([file(credentialsId: 'k8credid', variable: 'KUBECONFIG')]) {
            // sh 'sed -i "s/<TAG>/${BUILD_NUMBER}/" nginx.yaml'
            // sh 'kubectl apply -f nginx.yaml -n default'
            sh 'echo HelloWorld!'
          }
        }
      } 
    }
  
  }
}