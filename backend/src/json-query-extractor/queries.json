[
  {
    "id": 1,
    "title": "SELECT a single section_student using sectionID and studentEmail",
    "query": "SELECT * FROM section_students SectionStudents WHERE SectionStudents.sectionID = ? AND SectionStudents.studentEmail = ?;"
  },
  {
    "id": 2,
    "title": "SELECT sections that a student is part of using studentEmail",
    "query": "SELECT section.id as sectionID, `section`.`name` as sectionName, `classroom`.`name` AS classroomName, `classroom`.`description` AS classroomDescription, `member`.`fullName` AS teacherFullName FROM `student` `student` JOIN `section_students` `section_student` ON `section_student`.`studentEmail`=`student`.`email` JOIN `section` `section` ON `section`.`ID`=`section_student`.`sectionID` JOIN `classroom` `classroom` ON `classroom`.`ID`=`section`.`classroomID` JOIN `member` `member` ON `member`.`email`=`section`.`teacherEmail` WHERE `student`.`email`= ?;"
  },
  {
    "id": 3,
    "title": "SELECT classrooms that a teacher has created using teacherEmail",
    "query": "SELECT `classroom`.`ID` AS classroomID, `classroom`.`name` AS classroomName, `classroom`.`description` AS classroomDescription, `teacher`.`fullName` AS teacherFullName FROM `member` `teacher` JOIN `classroom` `classroom` ON `classroom`.`createdBy`=`teacher`.`email` WHERE `teacher`.`email`= ?;"
  },
  {
    "id": 4,
    "title": "SELECT sections that a teacher has been assigned using teacherEmail",
    "query": "  SELECT section.id as sectionID, `section`.`name` as sectionName, `classroom`.`name` AS classroomName, `classroom`.`description` AS classroomDescription, `teacher`.`fullName` AS teacherFullName FROM `member` `teacher` JOIN `section` `section` ON `section`.`teacherEmail`=`teacher`.`email` JOIN `classroom` `classroom` ON `classroom`.`ID`=`section`.`classroomID` WHERE `teacher`.`email`= ?;"
  },
  {
    "id": 5,
    "title": "SELECT announcement data (information, comments)",
    "query": "SELECT announcement.ID, announcement.creationDate, announcement.contentBody, teacher.fullName AS teacherFullName, comments FROM announcement INNER JOIN `section` ON announcement.sectionID = `section`.ID INNER JOIN `member` teacher ON `section`.teacherEmail = teacher.email LEFT JOIN ( SELECT announcementComment.announcementID, JSON_ARRAYAGG(JSON_OBJECT('email', `member`.email, 'fullName', `member`.fullName , 'contentBody', announcementComment.contentBody, 'creationDate', announcementComment.creationDate)) AS comments FROM `announcement_comment` announcementComment INNER JOIN `member` ON `member`.email = announcementComment.commentatorEmail WHERE announcementComment.announcementID = ? GROUP BY announcementComment.announcementID ) aggregatedComments ON (aggregatedComments.announcementID = announcement.ID) WHERE announcement.ID = ?;"
  },
  {
    "id": 6,
    "title": "SELECT section data (information, announcements, members)",
    "query": "SELECT section.ID AS sectionID, section.name AS sectionName, classroom.name AS classroomName, classroom.description AS classroomDescription, teacher.fullName AS teacherFullName, students, announcements FROM `section` INNER JOIN `classroom` ON section.classroomID = classroom.ID INNER JOIN `member` `teacher` ON section.teacherEmail = `teacher`.email LEFT JOIN ( SELECT sectionStudents.sectionID, JSON_ARRAYAGG(JSON_OBJECT('email', sectionStudents.studentEmail, 'fullName', `student`.fullName)) AS students FROM `section_students` sectionStudents INNER JOIN `member` `student` ON sectionStudents.studentEmail = `student`.email WHERE sectionStudents.sectionID = ? GROUP BY sectionStudents.sectionID ) aggregatedStudents ON (aggregatedStudents.sectionID = section.ID) LEFT JOIN ( SELECT announcement.sectionID, JSON_ARRAYAGG(JSON_OBJECT('ID', announcement.ID, 'creationDate', announcement.creationDate, 'contentBody', announcement.contentBody)) AS announcements FROM announcement WHERE announcement.sectionID = ? GROUP BY announcement.sectionID ) aggregatedAnnouncements ON (aggregatedAnnouncements.sectionID = section.ID) WHERE section.ID = ?"
  },
  {
    "id": 7,
    "title": "INSERT member as section_student in a section",
    "query": "INSERT INTO `section_students`(studentEmail, sectionID) VALUES (?, ?);"
  },
  {
    "id": 8,
    "title": "INSERT question as quiz_questions in a quiz",
    "query": "INSERT INTO quiz_questions (quizID, questionID) values ?;"
  },
  {
    "id": 9,
    "title": "Assign quiz to all students of a section",
    "query": "INSERT INTO quiz_assignment (ID, dueDate, quizID, studentEmail) SELECT uuid(), ?, ?, section_students.studentEmail FROM section_students WHERE section_students.sectionID  = ?"
  },
  {
    "id": 10,
    "title": "SELECT quiz data (information, MCQs, TFQs, FTQs)",
    "query": "SELECT quiz.ID, quiz.name, quiz.duration, mcq.questions as MCQs, tf.questions as TFQs, ft.questions as FTQs FROM quiz LEFT JOIN( SELECT mcqs.quizID as quizID, JSON_ARRAYAGG(JSON_OBJECT('ID', mcqs.questionID, 'body', mcqs.body, 'points', mcqs.points, 'answers', mcqs.answers)) as questions FROM ( SELECT qques.quizID as quizID, q.ID as questionID, q.body, q.points, JSON_ARRAYAGG(JSON_OBJECT('ID', mcqa.ID, 'body', mcqa.body)) as answers FROM quiz_questions qques JOIN question q ON qques.questionID = q.ID JOIN mcq_answer mcqa ON q.ID = mcqa.questionID WHERE qques.quizID = ? AND q.`type` = \"MCQ\" GROUP BY q.ID) mcqs GROUP BY mcqs.quizID ) as mcq ON mcq.quizID = quiz.ID LEFT JOIN ( SELECT qques.quizID as quizID, JSON_ARRAYAGG(JSON_OBJECT('ID', questionID, 'body', q.body, 'points', q.points)) as questions FROM quiz_questions qques JOIN question q ON qques.questionID = q.ID WHERE qques.quizID = ? AND q.`type` = \"TF\" GROUP BY qques.quizID ) as tf ON tf.quizID = quiz.ID LEFT JOIN ( SELECT qques.quizID as quizID, JSON_ARRAYAGG(JSON_OBJECT('ID', questionID, 'body', q.body, 'points', q.points)) as questions FROM quiz_questions qques JOIN question q ON qques.questionID = q.ID WHERE qques.quizID = ? AND q.`type` = \"FT\" GROUP BY qques.quizID ) as ft ON ft.quizID = quiz.ID WHERE quiz.ID = ?;"
  },
  {
    "id": 11,
    "title": "Evaluate a Multiple Choice Question",
    "query": "SELECT CASE WHEN ? =(SELECT mcq.ID FROM mcq_answer mcq WHERE mcq.questionID = q.ID AND mcq.isCorrect = true) THEN q.points ELSE 0 END as obtainedPoints, q.points as totalPoints FROM question q WHERE q.ID = ?;"
  },
  {
    "id": 12,
    "title": "Evaluate a True False Question",
    "query": "SELECT CASE WHEN ? = (SELECT tfa.correctChoice FROM true_false_answer tfa WHERE tfa.questionID = q.ID) THEN q.points ELSE 0 END as obtainedPoints, q.points as totalPoints FROM question q WHERE q.ID = ?;"
  },
  {
    "id": 13,
    "title": "Evaluate a Free Text Question",
    "query": "SELECT CASE WHEN ? IN(SELECT fta.body FROM free_text_answer fta WHERE fta.questionID = q.ID) THEN q.points ELSE 0 END as obtainedPoints, q.points as totalPoints FROM question q WHERE q.ID = ?;"
  },
  {
    "id": 14,
    "title": "Coding Questions With Their Test Cases",
    "query": "SELECT JSON_ARRAYAGG(JSON_OBJECT('id', `tc`.id, 'in', `tc`.in, 'out', `tc`.`out`)) AS testCases, `coding_question`.id AS CodingQuestion_Id, `coding_question`.title AS CodingQuestion_Title, `coding_question`.body AS CodingQuestion_Body FROM `coding_question` JOIN `test_case` tc on coding_question.id = tc.codingQuestionId WHERE `coding_question`.`teacherID` = ? GROUP BY CodingQuestion_Id;"
  },
  {
    "id": 15,
    "title": "SELECT quiz data for teacher feed",
    "query": "SELECT quiz.ID, quiz.name, quiz.duration, aggregatedQuizQuestions.questions, aggregatedQuizAssignments.assignedTo, aggregatedQuizResults.results FROM quiz INNER JOIN( SELECT qq.quizID as quizID, JSON_ARRAYAGG(JSON_OBJECT('ID', q.ID, 'title', q.title, 'body', q.body, 'points', q.points)) AS questions FROM quiz_questions qq JOIN question q ON qq.questionID = q.ID WHERE qq.quizID = ? GROUP BY qq.quizID) AS aggregatedQuizQuestions ON aggregatedQuizQuestions.quizID = quiz.ID LEFT JOIN ( SELECT qa.quizID as quizID, JSON_ARRAYAGG(JSON_OBJECT('ID', qa.ID, 'studentEmail', qa.studentEmail)) AS assignedTo FROM quiz_assignment qa LEFT JOIN quiz_result qr ON qr.quizAssignmentID = qa.ID WHERE qr.ID IS NULL AND qa.quizID = ? GROUP BY qa.ID ) AS aggregatedQuizAssignments ON aggregatedQuizAssignments.quizID = quiz.ID LEFT JOIN ( SELECT qa.quizID as quizID, JSON_ARRAYAGG(JSON_OBJECT('ID', qr.ID, 'studentEmail', qr.studentEmail, 'obtainedPoints', qr.obtainedPoints, 'totalPoints', qr.totalPoints)) as results FROM quiz_result qr JOIN quiz_assignment qa ON qr.quizAssignmentID = qa.ID WHERE qa.quizID = ? GROUP BY qa.quizID ) AS aggregatedQuizResults ON aggregatedQuizResults.quizID = quiz.ID WHERE quiz.ID = ?;"
  },
  {
    "id": 16,
    "title": "SELECT quizzes for student",
    "query": "SELECT aggregatedQuizAssignments.assignedQuizzes, aggregatedQuizResults.results FROM student s LEFT JOIN( SELECT qa.studentEmail, JSON_ARRAYAGG(JSON_OBJECT('ID', qa.ID, 'name', q.name)) as assignedQuizzes FROM quiz_assignment qa INNER JOIN quiz q ON q.ID = qa.quizID LEFT JOIN quiz_result qr ON qr.quizAssignmentID = qa.ID WHERE qa.studentEmail = ? AND qr.ID IS NULL GROUP BY qa.studentEmail) as aggregatedQuizAssignments ON aggregatedQuizAssignments.studentEmail = s.email LEFT JOIN ( SELECT qa.studentEmail, JSON_ARRAYAGG(JSON_OBJECT('ID', qr.ID, 'name', q.name, 'studentEmail', qr.studentEmail, 'obtainedPoints', qr.obtainedPoints, 'totalPoints', qr.totalPoints)) as results FROM quiz_result qr JOIN quiz_assignment qa ON qr.quizAssignmentID = qa.ID JOIN quiz q ON q.ID = qa.quizID WHERE qa.studentEmail = ? GROUP BY qa.studentEmail ) as aggregatedQuizResults ON aggregatedQuizResults.studentEmail = s.email WHERE s.email = ?"
  },
  {
    "id": 17,
    "title": "Assign assignment to students page",
    "query": "SELECT a.id, a.name, (SELECT JSON_OBJECT('title', cq.title, 'body', cq.body, 'test_cases', JSON_ARRAYAGG(JSON_OBJECT('in', tc.in, 'out', tc.out))) AS codingQuestionData FROM coding_question cq JOIN test_case tc on cq.id = tc.codingQuestionId JOIN assignment a2 on cq.id = a2.codingQuestionId WHERE a2.id = ?AND a2.teacherID = ?) AS codingQuestionData, (SELECT COALESCE(JSON_ARRAYAGG(JSON_OBJECT('id', sc.id, 'name', sc.name)), JSON_ARRAY()) AS sectionList FROM section sc JOIN assignment a on sc.teacherEmail = a.teacherID WHERE a.teacherID = ? AND a.id = ?) AS sectionList, (SELECT COALESCE(JSON_ARRAYAGG(aabs.studentEmail), JSON_ARRAY()) AS studentList FROM assigned_assignment_by_student aabs JOIN assignment a on aabs.assignmentID = a.id WHERE a.id = ?) AS studentEmails FROM assignment a LEFT JOIN section sc on sc.teacherEmail = a.teacherID JOIN coding_question cq on cq.id = a.codingQuestionId JOIN test_case tc on cq.id = tc.codingQuestionId WHERE a.teacherID = ? and a.id = ? GROUP BY a.id;"
  },
  {
    "id": 18,
    "title": "Show students their assigned assignments details",
    "query": "SELECT a.id, a.name, a.dueDate, a.modelID, a.score FROM assignment a WHERE a.id IN (SELECT aabs.assignmentID FROM assigned_assignment_by_student aabs WHERE aabs.studentEmail = ?);"
  },
  {
    "id": 19,
    "title": "Remove student from assignment",
    "query": "DELETE FROM assigned_assignment_by_student aabs WHERE aabs.assignmentID = ? AND studentEmail = ?;"
  }
]