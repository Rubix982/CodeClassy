<!-- Monaco VS Loader import -->
<script src="/node_modules/monaco-editor/min/vs/loader.js"></script>

<!-- Require configuration -->
<script>
  require.config({
    paths: {
      vs: "/node_modules/monaco-editor/min/vs",
      Convergence: "/node_modules/@convergence/convergence/convergence.amd.js",
      ConvergenceColorAssigner:
        "/node_modules/@convergence/color-assigner/umd/color-assigner.min.js",
      MonacoCollabExt: "/dist/umd/monaco-collab-ext.min.js",
      MonacoConvergenceAdapter: "/src/js/monaco-adapter.js",
      axios: "/node_modules/axios/dist/axios.min.js",
      rxjs: "/node_modules/rxjs/dist/bundles/rxjs.umd.js",
      Contents: "/dist/src/ts/contents.js",
      Config: "/dist/src/ts/config.js",
      API: "/dist/lib/API.js",
    },
  });
</script>

<!-- Convergence imports -->
<script
  src="/node_modules/@convergence/convergence/convergence.amd.min.js"
  type="text/javascript"
  charset="utf-8"
></script>
<script
  src="/node_modules/@convergence/color-assigner/umd/color-assigner.min.js"
  type="text/javascript"
  charset="utf-8"
></script>

<!-- Monaco Editor imports -->
<script
  src="/node_modules/monaco-editor/min/vs/editor/editor.main.nls.js"
  type="text/javascript"
  charset="utf-8"
></script>
<script
  src="/node_modules/monaco-editor/min/vs/editor/editor.main.js"
  type="text/javascript"
  charset="utf-8"
></script>

<!-- Axios import -->
<script
  src="/node_modules/axios/dist/axios.min.js"
  type="text/javascript"
  charset="utf-8"
></script>

<!-- Build imports -->
<script
  src="/dist/umd/monaco-collab-ext.min.js"
  type="text/javascript"
  charset="utf-8"
></script>
<script
  src="/dist/src/ts/config.js"
  type="text/javascript"
  charset="utf-8"
></script>
<script
  src="/dist/src/ts/contents.js"
  type="text/javascript"
  charset="utf-8"
></script>

<!-- Source file imports -->
<script
  src="/src/js/monaco-adapter.js"
  type="text/javascript"
  charset="utf-8"
></script>
<script
  src="/src/js/monaco.js"
  id="monaco_script"
  type="text/javascript"
  charset="utf-8"
  class="<%= data.fullName %>"
></script>

<!-- <%= await include('../partials/makeSubmissionAttempt'); %> -->

<script>
  const save = async () => {
    const editorData = monaco.editor.getModels()[0].getValue();
    <%- await makeSubmissionAttempt(_req, _res, ""); %>;
  };
</script>
<script type="module">
  // import { io } from "https://cdn.socket.io/4.3.2/socket.io.esm.min.js";
  // io();
</script>
