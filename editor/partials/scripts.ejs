<script src="/node_modules/monaco-editor/min/vs/loader.js"></script>
<script>
  require.config({
    paths: {
      vs: "/node_modules/monaco-editor/min/vs",
      Convergence: "/node_modules/@convergence/convergence/convergence.amd.js",
      ConvergenceColorAssigner:
        "/node_modules/@convergence/color-assigner/umd/color-assigner.min.js",
      MonacoConvergenceAdapter: "/src/js/monaco-adapter.js",
      axios: "/node_modules/axios/dist/axios.min.js",
      rxjs: "/node_modules/rxjs/dist/bundles/rxjs.umd.js",
      MonacoCollabExt: "/dist/umd/monaco-collab-ext.min.js",
      Contents: "/dist/src/ts/contents.js",
      Config: "/dist/src/ts/config.js",
      API: "/dist/lib/API.js",
    },
  });
</script>
<script src="/node_modules/@convergence/convergence/convergence.amd.min.js"></script>
<script src="/node_modules/@convergence/color-assigner/umd/color-assigner.min.js"></script>
<script src="/node_modules/monaco-editor/min/vs/loader.js"></script>
<script src="/node_modules/monaco-editor/min/vs/editor/editor.main.nls.js"></script>
<script src="/node_modules/monaco-editor/min/vs/editor/editor.main.js"></script>
<script src="/node_modules/axios/dist/axios.min.js"></script>
<script src="/dist/umd/monaco-collab-ext.min.js"></script>
<script src="/src/js/monaco-adapter.js"></script>
<script src="/src/js/monaco.js"></script>
<script type="module">
  // import { io } from "https://cdn.socket.io/4.3.2/socket.io.esm.min.js";
  // io();
</script>
<script type="module">
  // const cases = [
  //   {
  //     inputs: ["Apple", "Banana", 4],
  //     outputs: ["Fruits"],
  //   },
  //   {
  //     inputs: [1, 2, 3],
  //     outputs: [4, 5, 6],
  //   },
  //   {
  //     inputs: ["Onion", "Tomatoes", 8, "Garlic"],
  //     outputs: ["Vegetables"],
  //   },
  // ];

  // for (var index = 0; index < cases.length; index++) {
  //   const __node = document.createElement("div");
  //   __node.id = index;

  //   const __h4Node = document.createElement("h4");
  //   __h4Node.style.margin = "10px";
  //   __h4Node.textContent = `Case: ${index + 1}`;
  //   __node.appendChild(__h4Node);

  //   const __h5Node_A = document.createElement("h5");
  //   __h5Node_A.style.color = "grey";
  //   __h5Node_A.style.margin = "15px";
  //   for (var j = 0; j < cases[index].inputs.length; j++) {
  //     const __h5Node_A_node = document.createElement("h5");
  //     __h5Node_A_node.style.color = "green";
  //     __h5Node_A_node.style.margin = "10px";
  //     __h5Node_A_node.textContent = cases[index].inputs[j];
  //     __h5Node_A.appendChild(__h5Node_A_node);
  //   }
  //   __node.appendChild(__h5Node_A);

  //   const __h5Node_B = document.createElement("h5");
  //   __h5Node_B.style.color = "grey";
  //   __h5Node_B.style.margin = "15px";
  //   __h5Node_B.textContent = `Output: `;
  //   for (var j = 0; j < cases[index].outputs.length; j++) {
  //     const __h5Node_B_node = document.createElement("h5");
  //     __h5Node_B_node.style.color = "red";
  //     __h5Node_B_node.style.margin = "10px";
  //     __h5Node_B_node.textContent = cases[index].outputs[j];
  //     __h5Node_B.appendChild(__h5Node_B_node);
  //   }
  //   __node.appendChild(__h5Node_B);
  //   document.getElementById("test-cases").appendChild(__node);
  // }

  async function save() {
    const JSONContent = {
      src: monaco.editor.getModels()[0].getValue(),
      stdin: STDIN,
      lang: "c",
      timeout: 60,
    };

    const res = await fetch("http://localhost:7000/submit", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(JSONContent),
    }).then((response) => response.json());

    setTimeout(async () => {
      await fetch(res.data, {
        method: "GET",
        headers: {
          "Content-Type": "application/json",
        },
      })
        .then((response) => response.json())
        .then((data) => {
          if (data.data.output === "") {
            document.getElementById("output-window").innerText =
              data.data.stderr;
          } else {
            document.getElementById("output-window").innerText = JSON.stringify(
              data.data.output.split("\n"),
              null,
              2
            );
          }
        });
    }, 2000);
  }
</script>
